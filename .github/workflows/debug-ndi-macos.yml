name: Debug NDI macOS Installation

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  debug-ndi:
    name: Debug NDI Installation
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: System Info
        run: |
          echo "=== System Information ==="
          sw_vers
          echo ""
          echo "=== Current User ==="
          whoami
          echo ""
          echo "=== Current Directory ==="
          pwd
          
      - name: Download NDI SDK
        run: |
          echo "=== Downloading NDI SDK ==="
          NDI_URL="https://downloads.ndi.tv/SDK/NDI_SDK_Mac/Install_NDI_SDK_v6_Apple.pkg"
          curl -L -o /tmp/ndi.pkg "$NDI_URL"
          echo "Download complete. File info:"
          ls -la /tmp/ndi.pkg
          file /tmp/ndi.pkg
          
      - name: Analyze Package Structure
        run: |
          echo "=== Package Structure ==="
          # Extract package to see its structure
          pkgutil --expand /tmp/ndi.pkg /tmp/ndi-expanded
          
          echo "Expanded contents:"
          find /tmp/ndi-expanded -type f -name "*.plist" | while read plist; do
            echo ""
            echo "=== Plist: $plist ==="
            plutil -p "$plist" | grep -E "(BundleIdentifier|InstallLocation|IFPkgFlagDefaultLocation)" || cat "$plist"
          done
          
          echo ""
          echo "=== Distribution file ==="
          cat /tmp/ndi-expanded/Distribution 2>/dev/null || echo "No Distribution file"
          
          echo ""
          echo "=== Package Info ==="
          for pkg in /tmp/ndi-expanded/*.pkg; do
            if [ -d "$pkg" ]; then
              echo "Package: $(basename $pkg)"
              if [ -f "$pkg/PackageInfo" ]; then
                cat "$pkg/PackageInfo"
              fi
            fi
          done
          
      - name: Install NDI SDK
        run: |
          echo "=== Installing NDI SDK ==="
          sudo installer -pkg /tmp/ndi.pkg -target / -verboseR
          
      - name: Find Installed Files
        run: |
          echo "=== Searching for NDI installations ==="
          
          echo "Method 1: Using pkgutil to find installed files"
          for pkg in $(pkgutil --pkgs | grep -i ndi); do
            echo ""
            echo "Package: $pkg"
            echo "Info:"
            pkgutil --pkg-info "$pkg"
            echo "Files (first 50):"
            pkgutil --files "$pkg" | head -50
            echo "Install location:"
            pkgutil --pkg-info "$pkg" | grep -i location
            echo "Volume:"
            pkgutil --pkg-info "$pkg" | grep -i volume
          done
          
          echo ""
          echo "Method 2: Find NDI directories"
          find /Library -name "*NDI*" -type d 2>/dev/null || true
          find /Applications -name "*NDI*" -type d 2>/dev/null || true
          find /usr/local -name "*NDI*" -type d 2>/dev/null || true
          find ~/Library -name "*NDI*" -type d 2>/dev/null || true
          
          echo ""
          echo "Method 3: Find Processing.NDI files"
          sudo find / -name "Processing.NDI*" 2>/dev/null | grep -v "Permission denied" || true
          
          echo ""
          echo "Method 4: Recent installations"
          sudo find / -type d -cmin -5 2>/dev/null | grep -v -E "(proc|dev|sys|private/var)" | head -50 || true
          
      - name: Check Known Locations
        run: |
          echo "=== Checking Known Locations ==="
          locations=(
            "/Library/NDI SDK for Apple"
            "/Library/NDI SDK for macOS"
            "/Library/NDI SDK"
            "/Library/NewTek"
            "/Applications/NDI SDK for Apple"
            "/Applications/NDI"
            "/usr/local/lib/ndi"
            "/opt/ndi"
          )
          
          for loc in "${locations[@]}"; do
            echo ""
            echo "Checking: $loc"
            if [ -d "$loc" ]; then
              echo "EXISTS! Contents:"
              ls -la "$loc" | head -20
              if [ -d "$loc/include" ]; then
                echo "Include directory:"
                ls -la "$loc/include" | head -10
              fi
              if [ -d "$loc/lib" ]; then
                echo "Lib directory:"
                ls -la "$loc/lib" | head -10
              fi
            else
              echo "Does not exist"
            fi
          done